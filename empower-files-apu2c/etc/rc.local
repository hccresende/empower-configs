# Put your custom commands here that should be executed once
# the system init finished. By default this file does nothing.

#!/bin/sh
. /lib/functions.sh

if [ -e /etc/config/openvswitch.configured ]
then
    echo "openvswitch already configured" > /dev/kmsg
    exit 0
fi

echo "config begin" > /dev/kmsg
config_load network
config_get WANPHYIF wanphy ifname
config_get WANIF wan ifname

REMOTE_IP=192.168.10.1
VXLAN_TUN=vxlan10
PSK=swordfish

echo "config loaded, wanphyif: $WANPHYIF, wanif: $WANIF" > /dev/kmsg

while [ "$(ip link show $WANPHYIF | grep UP)" == "" ]
do
    echo "waiting for $WANPHYIF to come up" > /dev/kmsg
    sleep 2
done

echo "resetting openvswitch" > /dev/kmsg
/etc/init.d/openvswitch stop
rm /etc/openvswitch/conf.db

echo "enabling and starting openvswitch" > /dev/kmsg
uci set openvswitch.ovs.disabled=0
uci commit openvswitch
/etc/init.d/openvswitch start

while [ "$(ovs-vsctl show 2>&1 | grep "database connection failed")" != "" ]
do
    echo "waiting for openvswitch service to start" > /dev/kmsg
    sleep 2
done

# Run ovs-monitor-ipsec
echo "starting ovs-monitor-ipsec" > /dev/kmsg
ovs-monitor-ipsec   \
--pidfile=/tmp/run/openvswitch/ovs-monitor-ipsec.pid   \
--log-file \
--detach   \
--monitor unix:/tmp/run/openvswitch/db.sock \
--ike-daemon strongswan

echo "configuring openvswitch" > /dev/kmsg
ovs-vsctl add-br $WANIF

HWADDR=$(cat /sys/class/net/$WANPHYIF/address)
ip link set dev $WANIF address $HWADDR

ifconfig $WANIF up

echo "configuring vxlan tunnel" > /dev/kmsg
ovs-vsctl add-port $WANIF $VXLAN_TUN -- \
set interface $VXLAN_TUN type=vxlan \
options:remote_ip=$REMOTE_IP \
options:psk=$PSK


echo "creating openvswitch.configured file" > /dev/kmsg
touch /etc/config/openvswitch.configured

echo "restarting empower" > /dev/kmsg
./etc/init.d/empower restart

exit 0
